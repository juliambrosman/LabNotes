2014-07-01
## Mothur analysis of WC g20 libraries:
## MUSCLE align sequences in MEGA:
## MEGA on Mac is version 5.2.2
#MUSCLE align codons...default parameters

cd /Desktop/g20/WC_Only_Manipulations
mothur
dist.seqs(fasta=CuratedGLSeqs_wc_Only_aligned.fas, output=lt)
#output: Output File Names: 
#			CuratedGLSeqs_wc_Only_aligned.phylip.dist

cluster(phylip=CuratedGLSeqs_wc_Only_aligned.phylip.dist)
#output: Output File Names: 
#				CuratedGLSeqs_wc_Only_aligned.phylip.an.sabund
#				CuratedGLSeqs_wc_Only_aligned.phylip.an.rabund
#				CuratedGLSeqs_wc_Only_aligned.phylip.an.list

tree.shared(phylip=CuratedGLSeqs_wc_Only_aligned.phylip.dist)
#output: Output File Names: 
#			CuratedGLSeqs_wc_Only_aligned.phylip.tre
#Tree is really big, want to pick out representative sequences for each OTU
get.oturep(phylip=CuratedGLSeqs_wc_Only_aligned.phylip.dist, list=CuratedGLSeqs_wc_Only_aligned.phylip.an.list, fasta=CuratedGLSeqs_wc_Only_aligned.fas)

#now make dist matrix out of the "unique" fasta file that came out of "getotu.rep"
#in regular terminal give "unique" fasta file smaller name:
cp CuratedGLSeqs_wc_Only_aligned.phylip.an.unique.rep.fasta GLWC_unique.fasta
#in mothur:
dist.seqs(fasta=GLWC_unique.fasta, output=lt)
tree.shared(phylip=GLWC_unique.phylip.dist)

#Look at tree using iTol, added a data file to put bar graphs on to show representation
#One more cluster tree, this time with sequences at 98% identity, or the "0.02" group files
#rename file:
cp CuratedGLSeqs_wc_Only_aligned.phylip.an.0.02.rep.fasta GLWC_g20_0.02.fasta
#in mothur: 
dist.seqs(fasta=GLWC_g20_0.02.fasta, output=lt)
tree.shared(phylip=GLWC_g20_0.02.phylip.dist)

## Trying to set up a Unifrac Analysis:
split.groups(group=wc_groups.txt, fasta=CuratedGLSeqs_wc_Only_wOG.fas)

# Output File Names: 
# CuratedGLSeqs_wc_Only_wOG.G-A3.fasta
# CuratedGLSeqs_wc_Only_wOG.G-J3.fasta
# CuratedGLSeqs_wc_Only_wOG.G-M2.fasta
# CuratedGLSeqs_wc_Only_wOG.G-S3.fasta
# CuratedGLSeqs_wc_Only_wOG.I-Ia.fasta
# CuratedGLSeqs_wc_Only_wOG.OG.fasta
# CuratedGLSeqs_wc_Only_wOG.R-J2.fasta
# CuratedGLSeqs_wc_Only_wOG.R-M2.fasta
# CuratedGLSeqs_wc_Only_wOG.R-S2.fasta

dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.G-A3.fasta, output=lt)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.G-J3.fasta, output=lt)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.G-M2.fasta, output=lt)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.G-S3.fasta, output=lt)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.I-Ia.fasta, output=lt)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.R-J2.fasta, output=lt)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.R-M2.fasta, output=lt)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.R-S2.fasta, output=lt)

#Output files: 
#CuratedGLSeqs_wc_Only_wOG.G-A3.phylip.dist
#CuratedGLSeqs_wc_Only_wOG.G-J3.phylip.dist
#CuratedGLSeqs_wc_Only_wOG.G-M2.phylip.dist
#CuratedGLSeqs_wc_Only_wOG.G-S3.phylip.dist
#CuratedGLSeqs_wc_Only_wOG.I-Ia.phylip.dist
#CuratedGLSeqs_wc_Only_wOG.R-J2.phylip.dist
#CuratedGLSeqs_wc_Only_wOG.R-M2.phylip.dist

dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.fas, output=lt)
cluster(phylip=CuratedGLSeqs_wc_Only_wOG.phylip.dist)
parse.list(list=CuratedGLSeqs_wc_Only_wOG.phylip.an.list, group=wc_groups.txt)

#Output File Names: 
#CuratedGLSeqs_wc_Only_wOG.phylip.an.G-A3.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.G-J3.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.G-M2.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.G-S3.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.I-Ia.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.OG.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.R-J2.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.R-M2.list
#CuratedGLSeqs_wc_Only_wOG.phylip.an.R-S2.list

get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.G-A3.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.G-A3.list, fasta=CuratedGLSeqs_wc_Only_wOG.G-A3.fasta, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.G-J3.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.G-J3.list, fasta=CuratedGLSeqs_wc_Only_wOG.G-J3.fasta, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.G-M2.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.G-M2.list, fasta=CuratedGLSeqs_wc_Only_wOG.G-M2.fasta, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.G-S3.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.G-S3.list, fasta=CuratedGLSeqs_wc_Only_wOG.G-S3.fasta, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.I-Ia.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.I-Ia.list, fasta=CuratedGLSeqs_wc_Only_wOG.I-Ia.fasta, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.R-J2.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.R-J2.list, fasta=CuratedGLSeqs_wc_Only_wOG.R-J2.fasta, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.R-M2.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.R-M2.list, fasta=CuratedGLSeqs_wc_Only_wOG.R-M2.fasta, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.R-S2.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.R-S2.list, fasta=CuratedGLSeqs_wc_Only_wOG.R-S2.fasta, label=unique)

# in bash
cat CuratedGLSeqs_wc_Only_wOG.phylip.an.*.unique.rep.fasta CuratedGLSeqs_wc_Only_wOG.OG.fasta > unique_wc_seqs.fasta
# Then made a tree... I'm losing track of what I was trying to do... maybe I should put this down for the night...

# 2014-07-02
# Simplifying today: conduct Unifrac Analysis based on difference between GL and RL sequences.
cd ~/Desktop/g20/WC_Only_Manipulations/gl-rl_wc_seq_comparison/
$ls 
# CuratedGLSeqs_wc_Only_wOG.fas	wc_groups.txt
#make distance matrix based on MUSCLE alignment (alignment already done for the CuratedGL* file)
dist.seqs(fasta=CuratedGLSeqs_wc_Only_wOG.fas, output=lt)
cluster(phylip=CuratedGLSeqs_wc_Only_wOG.phylip.dist)	#cluster sequences based on distance matrix
split.groups(group=wc_groups.txt, fasta=CuratedGLSeqs_wc_Only_wOG.fas)
parse.list(list=CuratedGLSeqs_wc_Only_wOG.phylip.an.list, group=wc_groups.txt)

get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.G.list, fasta=CuratedGLSeqs_wc_Only_wOG.fas, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.R.list, fasta=CuratedGLSeqs_wc_Only_wOG.fas, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.I.list, fasta=CuratedGLSeqs_wc_Only_wOG.fas, label=unique)
get.oturep(phylip=CuratedGLSeqs_wc_Only_wOG.phylip.dist, list=CuratedGLSeqs_wc_Only_wOG.phylip.an.O.list, fasta=CuratedGLSeqs_wc_Only_wOG.fas, label=unique)

# in bash:
cat *rep.fasta > lake_unique_g20.fasta
#edited titles to match environment file in BioEdit/Excel
#Re-aligned unique sequences, removed gaps and constructed a UPGMA tree and saved it as .nwk
files: 	g20_unique_by_lake.fas
		unique_by_lake_upgma.nwk
		ubl_envt.txt

# I think I'm read for unifrac now:
# mothur > unifrac.unweighted(tree=abrecovery.paup.nj, group=abrecovery.groups)

unifrac.unweighted(tree=unique_by_lake_upgma.nwk, group=envt_newnames.txt)
#nothing is working!  Going to return to my original sequence and group file with replicate sequences

#and magically it works.  It was not liking the additional column of numbers, working better when all sequences are used.

unifrac.unweighted(tree=all_wc_seqs.nwk, group=wc_groups.txt, random=t)

unifrac.unweighted(tree=all_wc_seqs.nwk, group=bigcat.txt, random=t, groups=all)
output: all_wc_seqs.uwsummary
		all_wc_seqs.nwk1.unweighted
unifrac.weighted(tree=all_wc_seqs.nwk, group=wc_groups.txt)

RESULTS:
Results from unifrac.unweighted:
unifrac.unweighted(tree=all_wc_seqs.nwk, group=bigcat.txt, random=t, groups=all)
Tree#	Groups	UWScore		UWSig
1		G-I		0.707124	0.3560
1		G-R		0.570881	0.0030
1		I-R		0.694422	0.4490

No significant differences between the libraries.  

Then this: 
unifrac.unweighted(tree=all_wc_seqs.nwk, group=bigcat.txt, random=t)
Tree#	Groups			UWScore		UWSig
1		G-I-OUTGROUP-R	0.527507	0.07401

Now NJ tree without an outgroup:
unifrac.unweighted(tree=all_wc_nj.nwk, group=bigcat.txt, random=t)
Tree#	Groups	UWScore	UWSig
1	G-I-R	0.484246	0.09701

unifrac.unweighted(tree=all_wc_nj.nwk, group=bigcat.txt, random=t, groups=all)
ree#	Groups	UWScore	UWSig
1	G-I	0.701095	0.47
1	G-R	0.580976	<0.001
1	I-R	0.729688	0.472

parsimony test:
parsimony(tree=all_wc_nj.nwk, group=bigcat.txt)
Result:
Tree#	Groups	ParsScore	ParsSig
1		G-I-R		41		<0.001

parsimony(tree=all_wc_nj.nwk, group=bigcat.txt, groups=G-R)
Tree#	Groups	ParsScore	ParsSig
1		G-R		32			<0.001

### 2014-07-03 Analysis with NJ tree built using MEGA
#trying to run a more respectable, stringent alignment in PhyML to use for unifrac analysis
Need to change the names of the sequence titles to get a proper phylip formatted file
PhyML is having problems with the lengthy names I've given it.

cd PhyML_alignment
Running a ML tree using MEGA.  Begin: 5:03 End: 6:09
Saved as .nwk: gl_rl_wconly_og_ng.nwk 

>unifrac.unweighted(tree=gl_rl_wconly_og_ng.nwk, group=bigcat.txt, random=t, groups=G-R)
output:
Tree#   Groups  UWScore 	UWSig
1       G-R     0.553636   	<0.0010 

output file re-named to: unifrac.uw.1.txt

#according to the unifrac demo, a score of ~0.5 means there's as much branch length that 
#shared as there is that is unique to each group.  This is interesting, and suggests that 
# the groups are significantly different from each other.

#general unifrac:
> unifrac.unweighted(tree=gl_rl_wconly_og_ng.nwk, group=bigcat.txt, random=t)
Tree#	Groups	UWScore	UWSig
1	G-I-OUTGROUP-R	0.461018	0.08101
It took 1 secs to run unifrac.unweighted.
All together, no significance

> unifrac.unweighted(tree=gl_rl_wconly_og_ng.nwk, group=bigcat.txt, random=t,groups=I-G-R)
Tree#	Groups	UWScore	UWSig
1	G-I	0.677735	0.42
1	G-R	0.553636	<0.001
1	I-R	0.714241	0.225
It took 4 secs to run unifrac.unweighted.

output file renamed: unifrac.uw.2.txt

# now let's try a weighted analysis:
> unifrac.weighted(tree=gl_rl_wconly_og_ng.nwk, group=bigcat.txt, random=t,groups=I-G-R)

output file for this analysis renamed: unifrac.w.1.txt

### Next use this tree to look at the different sampling points:
>unifrac.unweighted(tree=gl_rl_wconly_og_ng.nwk, group=wc_groups.txt, random=t)
Tree#	Groups									UWScore		UWSig
1	G-A3-G-J3-G-M2-G-S3-I-Ia-OG-R-J2-R-M2-R-S2	0.432594	0.005005

output file renamed: unifrac.uw.3.txt

#now split up the samples to look at significance between pairwise comparisons:
>unifrac.unweighted(tree=gl_rl_wconly_og_ng.nwk, group=wc_groups.txt, random=t, groups=all)
Tree#	Groups	UWScore	UWSig
1	G-A3-G-J3	0.905754	0.29
1	G-A3-G-M2	0.747581	0.133
1	G-J3-G-M2	0.798009	0.003002
1	G-A3-G-S3	0.611493	0.582
1	G-J3-G-S3	0.894253	0.062
1	G-M2-G-S3	0.656261	0.01501
1	G-A3-I-Ia	0.791048	0.747
1	G-J3-I-Ia	0.794054	0.454
1	G-M2-I-Ia	0.684122	0.308
1	G-S3-I-Ia	0.728931	0.451
1	G-A3-R-J2	0.905252	0.416
1	G-J3-R-J2	0.752922	0.049
1	G-M2-R-J2	0.819974	0.005001
1	G-S3-R-J2	0.769465	0.123
1	I-Ia-R-J2	0.89715		0.342
1	G-A3-R-M2	0.680685	0.125
1	G-J3-R-M2	0.881256	0.001007
1	G-M2-R-M2	0.494992	0.05101
1	G-S3-R-M2	0.706853	0.003008
1	I-Ia-R-M2	0.712045	0.361
1	R-J2-R-M2	0.858321	<0.001
1	G-A3-R-S2	0.806013	0.59
1	G-J3-R-S2	0.835669	0.212
1	G-M2-R-S2	0.635257	0.135
1	G-S3-R-S2	0.525266	0.384
1	I-Ia-R-S2	0.785057	0.565
1	R-J2-R-S2	0.544562	0.095
1	R-M2-R-S2	0.704042	0.02101

summary output file re-named: 
unifrac.uw.4.txt

# made new group files:
year_groups.txt
lakeyear_groups.txt

#unweighted unifrac by year:
>unifrac.unweighted(tree=gl_rl_wconly_og_ng.nwk, group=year_groups.txt, random=t, groups=2-3)
Tree#	Groups	UWScore	UWSig
1	2-3	0.608128	<0.001

#sigh... significant.
renamed summary output file: unifrac.uw.5.txt

#now by year and lake: 
>unifrac.unweighted(tree=gl_rl_wconly_og_ng.nwk, group=lakeyear_groups.txt, random=t, groups=G2-G3-R2-R3)
Tree#	Groups	UWScore	UWSig
1	G2-G3	0.605231	0.001009
1	G2-R2	0.49222	0.07801
1	G3-R2	0.598831	<0.001

renamed summary output file: unifrac.uw.6.txt




